[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "device_control"
description = "SCExAO device control"
readme = "README.md"
authors = [
    {name = "Miles Lucas", email = "mdlucas@hawaii.edu"},
    {name = "Vincent Deo", email = "vdeo@naoj.org"},
    {name = "Kyohoon Ahn", email = "kyohoon@naoj.org"},
]
dependencies = [
    "click",
    "docopt",
    "loguru",
    "paramiko",
    "pyserial",
    "pyusb",
    "ruff",
    "tomli-w",
    "tomli",
    "tqdm",
    "zaber-motion",
    "elliptec",
]
dynamic = ["version"]

[project.optional-dependencies]
scexao = [
    "swmain",
    "superk-control",
    "scxconf",
]
test = [
    "pytest",
]

[project.scripts]
# daemons
scexao2_daemon = "device_control.daemons.scexao2_devices:main"
vampires_daemon = "device_control.daemons.vampires_devices:main"
viswfs_daemon = "device_control.daemons.viswfs_devices:main"
# facility devices
imr = "device_control.facility.image_rotator:main"
wpu = "device_control.facility.wpu:main"
# VAMPIRES devices
vampires_bs = "device_control.vampires.vampires_beamsplitter:main"
vampires_diff = "device_control.vampires.vampires_diffwheel:main"
vampires_fieldstop = "device_control.vampires.vampires_fieldstop:main"
vampires_filter = "device_control.vampires.vampires_filter:main"
vampires_flc = "device_control.vampires.vampires_flc:main"
vampires_focus = "device_control.vampires.vampires_focus:main"
vampires_mask = "device_control.vampires.vampires_mask:main"
vampires_mbi = "device_control.vampires.vampires_mbi:main"
vampires_pupil = "device_control.vampires.vampires_pupil:main"
vampires_qwp = "device_control.scexao.vis_qwp:main"
vampires_tc = "device_control.vampires.vampires_tc:main"
vampires_trig = "device_control.vampires.vampires_trigger:main"
# scexao devices
scexao_polarizer = "device_control.scexao.polarizer:main"
vis_block = "device_control.scexao.vis_block:main"
vis_qwp = "device_control.scexao.vis_qwp:main"
# GLINT devices
glint_steering1 = "device_control.glint.steering:main1"
glint_steering2 = "device_control.glint.steering:main2"
# nlCWFS (aka. viswfs) devices
viswfs_pickoffBS = "device_control.viswfs.viswfs_pickoffBS:main"
viswfs_camfocus = "device_control.viswfs.viswfs_camfocus:main"
viswfs_trombone1 = "device_control.viswfs.viswfs_trombone1:main"
viswfs_trombone2 = "device_control.viswfs.viswfs_trombone2:main"
viswfs_rs1 = "device_control.viswfs.viswfs_rs1:main"
viswfs_rs2 = "device_control.viswfs.viswfs_rs2:main"
viswfs_flipmount1 = "device_control.viswfs.viswfs_flipmount1:main"
viswfs_flipmount2 = "device_control.viswfs.viswfs_flipmount2:main"
viswfs_hwp = "device_control.viswfs.viswfs_hwp:main"

[tool.setuptools.dynamic]
version = {attr = "device_control.__version__"}

[tool.coverage.run]
source = ["device_control"]

[tool.ruff.lint]
# pycodestyle, pydocstyle, isort, pyupgrade, pylint, tidyimports, use-pathlib, numpy, errmsg
select = ["E", "F", "B", "SIM", "I", "UP", "TID", "PTH", "NPY", "EM"]
ignore = [
    "E501", # line too long
]

[tool.ruff]
line-length = 100

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "numpy"
